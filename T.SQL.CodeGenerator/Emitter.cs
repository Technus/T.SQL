using CodegenCS;
using System.Threading;

namespace T.SQL.CodeGenerator;
internal class Emitter
{
    //private static RenderEnumerableOptions NewLines { get; } = RenderEnumerableOptions.CreateWithCustomSeparator("\n");
    //private static RenderEnumerableOptions CSV { get; } = RenderEnumerableOptions.SingleLineCSV;
    private static string GeneratorAssemblyName { get; } = typeof(Emitter).Assembly.FullName;

    private CancellationToken CancellationToken { get; }
    private TypeDefinition TypeDefinition { get; }
    private ICodegenTextWriter Writer { get; }

    public Emitter(CancellationToken cancellationToken, TypeDefinition typeDefinition)
    {
        CancellationToken = cancellationToken;
        TypeDefinition = typeDefinition;
        Writer = new CodegenTextWriter
        {
            IndentString = "  "
        };
    }

    internal (string hintName, string source) EmitType()
    {
        _ = Writer.WriteLine($$"""
            //Generated by {{GeneratorAssemblyName}}

            namespace {{TypeDefinition.Namespace}}
            {
            #nullable enable
            {{() => RenderContent()}}
            #nullable restore
            }
            """);
        return (TypeDefinition.Name + ".g.cs", Writer.ToString());
    }

    private void RenderContent()
    {
    }
}
